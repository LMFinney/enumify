{"version":3,"file":"ts-enums.es5.js","sources":["../src/ts-enums.ts"],"sourcesContent":["const INITIALIZED: symbol = Symbol();\r\n\r\n/**\r\n * An instance of the enum (for example, if you have an enumeration of seasons,\r\n * Winter would be an EnumValue.\r\n */\r\nexport abstract class EnumValue {\r\n  private _ordinal: number; // set in Enum.enumValuesFromObject\r\n  private _propName: string; // set in Enum.enumValuesFromObject\r\n\r\n  /**\r\n   * `initEnum()` on Enum closes the class, so subsequence calls to this\r\n   * constructor throw an exception.\r\n   */\r\n  constructor(private _description: string) {\r\n    if ({}.hasOwnProperty.call(new.target, INITIALIZED)) {\r\n      throw new Error('EnumValue classes canâ€™t be instantiated individually');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The description of the instance passed into the constructor - may be the\r\n   * same as the propName.\r\n   *\r\n   * @returns {string} The description\r\n   */\r\n  get description(): string {\r\n    return this._description;\r\n  }\r\n\r\n  toString() {\r\n    return `${this.constructor.name}.${this.propName}`;\r\n  }\r\n\r\n  /**\r\n   * Returns the index of the instance in the enum (0-based)\r\n   *\r\n   * @returns {number} The index of the instance in the enum (0-based)\r\n   */\r\n  get ordinal(): number {\r\n    return this._ordinal;\r\n  }\r\n\r\n  /**\r\n   * Returns the property name used for this instance in the Enum.\r\n   *\r\n   * @returns {string} the property name used for this instance in the Enum\r\n   */\r\n  get propName(): string {\r\n    return this._propName;\r\n  }\r\n}\r\n\r\n/**\r\n * This is an abstract class that is not intended to be used directly. Extend it\r\n * to turn your class into an enum (initialization is performed via\r\n * `this.initEnum()` within the constructor).\r\n */\r\nexport abstract class Enum<T extends EnumValue> {\r\n  private static enumValues: Map<string, EnumValue[]> =\r\n    new Map<string, EnumValue[]>();\r\n  private name: string;\r\n\r\n  /**\r\n   * Set up the enum and close the class. This must be called after the\r\n   * constructor to set up the logic.\r\n   *\r\n   * @param name The name that will be used for internal storage - must be\r\n   * unique\r\n   * @param theEnum The enum to process\r\n   */\r\n  private static initEnum<T extends EnumValue>(name: string,\r\n                                               theEnum: Enum<T>): void {\r\n    if (Enum.enumValues.has(theEnum.name)) {\r\n      throw new Error(`Duplicate name: ${theEnum.name}`);\r\n    }\r\n    let enumValues: T[] = this.enumValuesFromObject(theEnum);\r\n    Object.freeze(enumValues);\r\n    Enum.enumValues.set(theEnum.name, enumValues);\r\n  }\r\n\r\n  /**\r\n   * Extract the enumValues from the Enum. We set the ordinal and propName\r\n   * properties on the EnumValue. We also freeze the objects and lock the Enum\r\n   * and EnumValue to prevent future instantiation.\r\n   *\r\n   * @param theEnum The enum to process\r\n   * @returns {T[]} The array of EnumValues\r\n   */\r\n  private static enumValuesFromObject<T extends EnumValue>(theEnum: Enum<T>): T[] {\r\n    const values: T[] = Object.getOwnPropertyNames(theEnum)\r\n      .filter((propName: string) => theEnum[propName] instanceof EnumValue)\r\n      .map((propName: string, index: number) => {\r\n        const enumValue: T = theEnum[propName];\r\n        Object.defineProperty(enumValue, '_ordinal', {\r\n          value: index,\r\n          configurable: false,\r\n          writable: false,\r\n          enumerable: true\r\n        });\r\n        Object.defineProperty(enumValue, '_propName', {\r\n          value: propName,\r\n          configurable: false,\r\n          writable: false,\r\n          enumerable: true\r\n        });\r\n        Object.freeze(enumValue);\r\n        return enumValue;\r\n      });\r\n    if (values.length) {\r\n      values[0].constructor[INITIALIZED] = true;\r\n    }\r\n    return values;\r\n  }\r\n\r\n  private static values(name: string): EnumValue[] {\r\n    let values: EnumValue[] | undefined = this.enumValues.get(name);\r\n    return values ? [...values] : [];\r\n  }\r\n\r\n  /**\r\n   * Given the property name of an enum constant, return its value.\r\n   *\r\n   * @param propName The property name to search by\r\n   * @returns {undefined|T} The matching instance\r\n   */\r\n  byPropName(propName: string): T | undefined {\r\n    return this.values.find((x: T) => x.propName === propName);\r\n  }\r\n\r\n  /**\r\n   * Given the description of an enum constant, return its value.\r\n   *\r\n   * @param description The property name to search by\r\n   * @returns {undefined|T} The matching instance\r\n   */\r\n  byDescription(description: string): T | undefined {\r\n    return this.values.find((x: T) => x.description === description);\r\n  }\r\n\r\n  /**\r\n   * Return a defensively-copied array of all the elements of the enum.\r\n   *\r\n   * @returns {T[]} The array of EnumValues\r\n   */\r\n  get values(): T[] {\r\n    return Enum.values(this.name) as T[];\r\n  }\r\n\r\n  /**\r\n   * Set up the enum and close the class.\r\n   *\r\n   * @param name The name that will be used for internal storage - must be unique\r\n   */\r\n  protected initEnum(name: string): void {\r\n    this.name = name;\r\n    Enum.initEnum(name, this);\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"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"}